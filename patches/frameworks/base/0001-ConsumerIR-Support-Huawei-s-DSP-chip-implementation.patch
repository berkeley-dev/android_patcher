From 8ba71e1c13b5f9fa492d64f4e6dc7d46b44e3a91 Mon Sep 17 00:00:00 2001
From: Artem Borisov <dedsa2002@gmail.com>
Date: Tue, 18 Sep 2018 17:12:15 +0300
Subject: [PATCH] ConsumerIR: Support Huawei's DSP chip implementation

Change-Id: Ie48e098b2e463183374dd6c8eba074031e31be2b
---
 .../com/android/server/ConsumerIrService.java   | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/services/core/java/com/android/server/ConsumerIrService.java b/services/core/java/com/android/server/ConsumerIrService.java
index 2ed6c77baa0..839629c6f82 100644
--- a/services/core/java/com/android/server/ConsumerIrService.java
+++ b/services/core/java/com/android/server/ConsumerIrService.java
@@ -19,6 +19,7 @@ package com.android.server;
 import android.content.Context;
 import android.content.pm.PackageManager;
 import android.hardware.IConsumerIrService;
+import android.media.AudioSystem;
 import android.os.PowerManager;
 import android.util.Slog;
 
@@ -36,6 +37,7 @@ public class ConsumerIrService extends IConsumerIrService.Stub {
     private final Context mContext;
     private final PowerManager.WakeLock mWakeLock;
     private final boolean mHasNativeHal;
+    private String mParameter;
     private final Object mHalLock = new Object();
 
     ConsumerIrService(Context context) {
@@ -53,6 +55,7 @@ public class ConsumerIrService extends IConsumerIrService.Stub {
         } else if (mHasNativeHal) {
             throw new RuntimeException("IR HAL present, but FEATURE_CONSUMER_IR is not set!");
         }
+        mParameter = AudioSystem.getParameters("audio_capability#irda_support");
     }
 
     @Override
@@ -91,11 +94,13 @@ public class ConsumerIrService extends IConsumerIrService.Stub {
 
         // Right now there is no mechanism to ensure fair queing of IR requests
         synchronized (mHalLock) {
+            setStartTransmitParameter();
             int err = halTransmit(carrierFrequency, pattern);
 
             if (err < 0) {
                 Slog.e(TAG, "Error transmitting: " + err);
             }
+            setEndTransmitParameter();
         }
     }
 
@@ -112,4 +117,16 @@ public class ConsumerIrService extends IConsumerIrService.Stub {
             return halGetCarrierFrequencies();
         }
     }
+
+    private void setStartTransmitParameter() {
+        if (mParameter != null && mParameter.contains("true")) {
+            AudioSystem.setParameters("ir_trans=on");
+        }
+    }
+
+    private void setEndTransmitParameter() {
+        if (mParameter != null && mParameter.contains("true")) {
+            AudioSystem.setParameters("ir_trans=off");
+        }
+    }
 }
-- 
2.19.0

